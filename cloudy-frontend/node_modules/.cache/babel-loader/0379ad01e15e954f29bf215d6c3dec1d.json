{"ast":null,"code":"import _defineProperty from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _objectSpread2;\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { Map, fromJS } from \"immutable\";\nimport { pender } from \"redux-pender\";\nimport * as api from \"lib/api\"; // action Types\n\nvar GET_POST = \"post/GET_POST\";\nvar REMOVE_POST = \"post/REMOVE_POST\";\nvar CHANGE_MODAL_OPEN = \"post/CHANGE_MODAL_OPEN\";\nvar CHANGE_MODAL_CLOSE = \"post/CHANGE_MODAL_CLOSE\";\nvar INTIALIZE = \"post/INTIALIZE\"; // action Creators\n\nexport var getPost = createAction(GET_POST, api.getPost);\nexport var removePost = createAction(REMOVE_POST, api.removePost);\nexport var initialize = createAction(INTIALIZE);\nexport var changeModalOpen = createAction(CHANGE_MODAL_OPEN);\nexport var changeModalClose = createAction(CHANGE_MODAL_CLOSE); // initail state\n\nvar initialState = Map({\n  post: Map({}),\n  modalState: false\n}); // reducer\n\nexport default handleActions(_objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, INTIALIZE, function () {\n  return initialState;\n}), _defineProperty(_objectSpread2, CHANGE_MODAL_OPEN, function (state) {\n  return state.set(\"modalState\", true);\n}), _defineProperty(_objectSpread2, CHANGE_MODAL_CLOSE, function (state) {\n  return state.set(\"modalState\", false);\n}), _objectSpread2), pender({\n  type: GET_POST,\n  onSuccess: function onSuccess(state, action) {\n    var post = action.payload.data;\n    return state.set(\"post\", fromJS(post));\n  }\n})), initialState);","map":{"version":3,"sources":["/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/src/store/modules/post.js"],"names":["createAction","handleActions","Map","fromJS","pender","api","GET_POST","REMOVE_POST","CHANGE_MODAL_OPEN","CHANGE_MODAL_CLOSE","INTIALIZE","getPost","removePost","initialize","changeModalOpen","changeModalClose","initialState","post","modalState","state","set","type","onSuccess","action","payload","data"],"mappings":";;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,SAASC,GAAT,EAAcC,MAAd,QAA4B,WAA5B;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,SAArB,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,eAAjB;AACA,IAAMC,WAAW,GAAG,kBAApB;AACA,IAAMC,iBAAiB,GAAG,wBAA1B;AACA,IAAMC,kBAAkB,GAAG,yBAA3B;AACA,IAAMC,SAAS,GAAG,gBAAlB,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAGX,YAAY,CAACM,QAAD,EAAWD,GAAG,CAACM,OAAf,CAA5B;AACP,OAAO,IAAMC,UAAU,GAAGZ,YAAY,CAACO,WAAD,EAAcF,GAAG,CAACO,UAAlB,CAA/B;AACP,OAAO,IAAMC,UAAU,GAAGb,YAAY,CAACU,SAAD,CAA/B;AACP,OAAO,IAAMI,eAAe,GAAGd,YAAY,CAACQ,iBAAD,CAApC;AACP,OAAO,IAAMO,gBAAgB,GAAGf,YAAY,CAACS,kBAAD,CAArC,C,CAEP;;AACA,IAAMO,YAAY,GAAGd,GAAG,CAAC;AACvBe,EAAAA,IAAI,EAAEf,GAAG,CAAC,EAAD,CADc;AAEvBgB,EAAAA,UAAU,EAAE;AAFW,CAAD,CAAxB,C,CAKA;;AACA,eAAejB,aAAa,qEAEvBS,SAFuB,EAEX;AAAA,SAAMM,YAAN;AAAA,CAFW,mCAIvBR,iBAJuB,EAIH,UAAAW,KAAK,EAAI;AAC5B,SAAOA,KAAK,CAACC,GAAN,CAAU,YAAV,EAAwB,IAAxB,CAAP;AACD,CANuB,mCAQvBX,kBARuB,EAQF,UAAAU,KAAK,EAAI;AAC7B,SAAOA,KAAK,CAACC,GAAN,CAAU,YAAV,EAAwB,KAAxB,CAAP;AACD,CAVuB,oBAYrBhB,MAAM,CAAC;AACRiB,EAAAA,IAAI,EAAEf,QADE;AAERgB,EAAAA,SAAS,EAAE,mBAACH,KAAD,EAAQI,MAAR,EAAmB;AAAA,QACdN,IADc,GACLM,MAAM,CAACC,OADF,CACpBC,IADoB;AAE5B,WAAON,KAAK,CAACC,GAAN,CAAU,MAAV,EAAkBjB,MAAM,CAACc,IAAD,CAAxB,CAAP;AACD;AALO,CAAD,CAZe,GAoB1BD,YApB0B,CAA5B","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\n\nimport { Map, fromJS } from \"immutable\";\nimport { pender } from \"redux-pender\";\n\nimport * as api from \"lib/api\";\n\n// action Types\nconst GET_POST = \"post/GET_POST\";\nconst REMOVE_POST = \"post/REMOVE_POST\";\nconst CHANGE_MODAL_OPEN = \"post/CHANGE_MODAL_OPEN\";\nconst CHANGE_MODAL_CLOSE = \"post/CHANGE_MODAL_CLOSE\";\nconst INTIALIZE = \"post/INTIALIZE\";\n\n// action Creators\nexport const getPost = createAction(GET_POST, api.getPost);\nexport const removePost = createAction(REMOVE_POST, api.removePost);\nexport const initialize = createAction(INTIALIZE);\nexport const changeModalOpen = createAction(CHANGE_MODAL_OPEN);\nexport const changeModalClose = createAction(CHANGE_MODAL_CLOSE);\n\n// initail state\nconst initialState = Map({\n  post: Map({}),\n  modalState: false\n});\n\n// reducer\nexport default handleActions(\n  {\n    [INTIALIZE]: () => initialState,\n\n    [CHANGE_MODAL_OPEN]: state => {\n      return state.set(\"modalState\", true);\n    },\n\n    [CHANGE_MODAL_CLOSE]: state => {\n      return state.set(\"modalState\", false);\n    },\n\n    ...pender({\n      type: GET_POST,\n      onSuccess: (state, action) => {\n        const { data: post } = action.payload;\n        return state.set(\"post\", fromJS(post));\n      }\n    })\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}