{"ast":null,"code":"import _defineProperty from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _objectSpread2;\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { Map } from \"immutable\";\nimport { pender } from \"redux-pender\";\nimport * as api from \"lib/api\";\nvar REGISTER_CHATROOM = \"chatroom/REGISTER_CHATROOM\";\nvar CHANGE_INPUT = \"chatroom/CHANGE_INPUT\";\nvar CHANGE_MODAL_OPEN = \"chatroom/CHANGE_MODAL_OPEN\";\nvar CHANGE_MODAL_CLOSE = \"chatroom/CHANGE_MODAL_CLOSE\"; // 액션 생성자\n// 유저 회원가입할때 사용하는것\n\nexport var chatroomRegister = createAction(REGISTER_CHATROOM, api.registerChatRoom);\nexport var changeInput = createAction(CHANGE_INPUT);\nexport var changeModalOpen = createAction(CHANGE_MODAL_OPEN);\nexport var changeModalClose = createAction(CHANGE_MODAL_CLOSE); // 초기 state\n\nvar initialState = Map({\n  roomID: \"0\",\n  title: \"\",\n  createDate: \"\",\n  modalState: false\n}); // 리듀서 여기서 모든상태 변화가 일어남.\n\nexport default handleActions(_objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, CHANGE_INPUT, function (state, action) {\n  var _action$payload = action.payload,\n      value = _action$payload.value,\n      name = _action$payload.name; // const currentDate = new Date();\n\n  return state.set(name, value);\n}), _defineProperty(_objectSpread2, CHANGE_MODAL_OPEN, function (state) {\n  return state.set(\"modalState\", true);\n}), _defineProperty(_objectSpread2, CHANGE_MODAL_CLOSE, function (state) {\n  return state.set(\"modalState\", false);\n}), _objectSpread2), pender({\n  type: REGISTER_CHATROOM,\n  onSuccess: function onSuccess(state, action) {\n    var _id = action.payload.data._id;\n    var title = action.payload.data;\n    return state.set(\"roomID\", _id).set(title);\n  }\n})), initialState);","map":{"version":3,"sources":["/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/src/store/modules/chatroom.js"],"names":["createAction","handleActions","Map","pender","api","REGISTER_CHATROOM","CHANGE_INPUT","CHANGE_MODAL_OPEN","CHANGE_MODAL_CLOSE","chatroomRegister","registerChatRoom","changeInput","changeModalOpen","changeModalClose","initialState","roomID","title","createDate","modalState","state","action","payload","value","name","set","type","onSuccess","_id","data"],"mappings":";;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AAEA,IAAMC,iBAAiB,GAAG,4BAA1B;AACA,IAAMC,YAAY,GAAG,uBAArB;AACA,IAAMC,iBAAiB,GAAG,4BAA1B;AACA,IAAMC,kBAAkB,GAAG,6BAA3B,C,CAEA;AACA;;AACA,OAAO,IAAMC,gBAAgB,GAAGT,YAAY,CAC1CK,iBAD0C,EAE1CD,GAAG,CAACM,gBAFsC,CAArC;AAIP,OAAO,IAAMC,WAAW,GAAGX,YAAY,CAACM,YAAD,CAAhC;AACP,OAAO,IAAMM,eAAe,GAAGZ,YAAY,CAACO,iBAAD,CAApC;AACP,OAAO,IAAMM,gBAAgB,GAAGb,YAAY,CAACQ,kBAAD,CAArC,C,CAEP;;AACA,IAAMM,YAAY,GAAGZ,GAAG,CAAC;AACvBa,EAAAA,MAAM,EAAE,GADe;AAEvBC,EAAAA,KAAK,EAAE,EAFgB;AAGvBC,EAAAA,UAAU,EAAE,EAHW;AAIvBC,EAAAA,UAAU,EAAE;AAJW,CAAD,CAAxB,C,CAOA;;AACA,eAAejB,aAAa,qEAGvBK,YAHuB,EAGR,UAACa,KAAD,EAAQC,MAAR,EAAmB;AAAA,wBACTA,MAAM,CAACC,OADE;AAAA,MACzBC,KADyB,mBACzBA,KADyB;AAAA,MAClBC,IADkB,mBAClBA,IADkB,EAEjC;;AACA,SAAOJ,KAAK,CAACK,GAAN,CAAUD,IAAV,EAAgBD,KAAhB,CAAP;AACD,CAPuB,mCASvBf,iBATuB,EASH,UAAAY,KAAK,EAAI;AAC5B,SAAOA,KAAK,CAACK,GAAN,CAAU,YAAV,EAAwB,IAAxB,CAAP;AACD,CAXuB,mCAavBhB,kBAbuB,EAaF,UAAAW,KAAK,EAAI;AAC7B,SAAOA,KAAK,CAACK,GAAN,CAAU,YAAV,EAAwB,KAAxB,CAAP;AACD,CAfuB,oBAiBrBrB,MAAM,CAAC;AACRsB,EAAAA,IAAI,EAAEpB,iBADE;AAERqB,EAAAA,SAAS,EAAE,mBAACP,KAAD,EAAQC,MAAR,EAAmB;AAAA,QACpBO,GADoB,GACZP,MAAM,CAACC,OAAP,CAAeO,IADH,CACpBD,GADoB;AAAA,QAEdX,KAFc,GAEJI,MAAM,CAACC,OAFH,CAEpBO,IAFoB;AAG5B,WAAOT,KAAK,CAACK,GAAN,CAAU,QAAV,EAAoBG,GAApB,EAAyBH,GAAzB,CAA6BR,KAA7B,CAAP;AACD;AANO,CAAD,CAjBe,GA0B1BF,YA1B0B,CAA5B","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { Map } from \"immutable\";\nimport { pender } from \"redux-pender\";\nimport * as api from \"lib/api\";\n\nconst REGISTER_CHATROOM = \"chatroom/REGISTER_CHATROOM\";\nconst CHANGE_INPUT = \"chatroom/CHANGE_INPUT\";\nconst CHANGE_MODAL_OPEN = \"chatroom/CHANGE_MODAL_OPEN\";\nconst CHANGE_MODAL_CLOSE = \"chatroom/CHANGE_MODAL_CLOSE\";\n\n// 액션 생성자\n// 유저 회원가입할때 사용하는것\nexport const chatroomRegister = createAction(\n  REGISTER_CHATROOM,\n  api.registerChatRoom\n);\nexport const changeInput = createAction(CHANGE_INPUT);\nexport const changeModalOpen = createAction(CHANGE_MODAL_OPEN);\nexport const changeModalClose = createAction(CHANGE_MODAL_CLOSE);\n\n// 초기 state\nconst initialState = Map({\n  roomID: \"0\",\n  title: \"\",\n  createDate: \"\",\n  modalState: false\n});\n\n// 리듀서 여기서 모든상태 변화가 일어남.\nexport default handleActions(\n  {\n    // [INTIALIZE]: (state, action) => initialState,\n    [CHANGE_INPUT]: (state, action) => {\n      const { value, name } = action.payload;\n      // const currentDate = new Date();\n      return state.set(name, value);\n    },\n\n    [CHANGE_MODAL_OPEN]: state => {\n      return state.set(\"modalState\", true);\n    },\n\n    [CHANGE_MODAL_CLOSE]: state => {\n      return state.set(\"modalState\", false);\n    },\n\n    ...pender({\n      type: REGISTER_CHATROOM,\n      onSuccess: (state, action) => {\n        const { _id } = action.payload.data;\n        const { data: title } = action.payload;\n        return state.set(\"roomID\", _id).set(title);\n      }\n    })\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}