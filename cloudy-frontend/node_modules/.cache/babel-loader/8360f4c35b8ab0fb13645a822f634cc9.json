{"ast":null,"code":"import _defineProperty from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _objectSpread2;\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { Map, List, fromJS } from \"immutable\";\nimport { pender } from \"redux-pender\";\nimport * as api from \"lib/api\"; // action Types\n\nvar GET_POST_LIST = \"list/GET_POST_LIST\";\nvar GET_CHATROOM_LIST = \"list/GET_CHATROOM_LIST\";\nvar SET_LOADING = \"list/SET_LOADGIN\";\nvar INIT_LOADING = \"list/INIT_LOADING\"; // action Creators\n\nexport var getPostList = createAction(GET_POST_LIST, api.getPostList, function (meta) {\n  return meta;\n});\nexport var getCharRoomList = createAction(GET_CHATROOM_LIST, api.getChatRoomList, function (meta) {\n  return meta;\n});\nexport var setLoading = createAction(SET_LOADING);\nexport var initLoading = createAction(INIT_LOADING); // initail state\n\nvar initialState = Map({\n  posts: List(),\n  chatrooms: List(),\n  lastPage: null,\n  // 아래 추가.\n  isLast: false,\n  isLoading: false\n}); // reducer\n\nexport default handleActions(_objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, SET_LOADING, function (state) {\n  return state.set(\"isLoading\", true);\n}), _defineProperty(_objectSpread2, INIT_LOADING, function (state) {\n  return state.set(\"isLoading\", false);\n}), _objectSpread2), pender({\n  type: GET_POST_LIST,\n  // onPending: (state, action) => {\n  //   return state.set(\"isLoading\", true);\n  // },\n  onSuccess: function onSuccess(state, action) {\n    var posts = action.payload.data; // console.log(fromJS(posts));\n\n    var lastPage = action.payload.headers[\"last-page\"];\n    var next = parseInt(action.payload.headers[\"next\"], 10);\n    var posts_before = state.get(\"posts\");\n    var newPost = posts_before.toArray();\n    posts.map(function (post) {\n      var mapPost = Map(post);\n      newPost.push(mapPost);\n      return 0;\n    });\n    return next === 1 ? state.set(\"posts\", fromJS(newPost)) : state.set(\"posts\", fromJS(posts)) //parseInt 앞에는 정수형으로 형변환할 데이터, 뒤에 인자값은 진수를 나타냄\n    .set(\"lastPage\", parseInt(lastPage, 10));\n  }\n}), pender({\n  type: GET_CHATROOM_LIST,\n  // onPending: (state, action) => {\n  //   return state.set(\"isLoading\", true);\n  // },\n  onSuccess: function onSuccess(state, action) {\n    var chatrooms = action.payload.data; // console.log(fromJS(posts));\n\n    var lastPage = action.payload.headers[\"last-page\"];\n    var next = parseInt(action.payload.headers[\"next\"], 10);\n    var chatrooms_before = state.get(\"chatrooms\");\n    var newChatRoom = chatrooms_before.toArray();\n    chatrooms.map(function (ChatRoom) {\n      var mapChatRoom = Map(ChatRoom);\n      newChatRoom.push(mapChatRoom);\n      return 0;\n    });\n    return next === 1 ? state.set(\"chatrooms\", fromJS(newChatRoom)) : state.set(\"chatrooms\", fromJS(chatrooms)) //parseInt 앞에는 정수형으로 형변환할 데이터, 뒤에 인자값은 진수를 나타냄\n    .set(\"lastPage\", parseInt(lastPage, 10));\n  }\n})), initialState);","map":{"version":3,"sources":["/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/src/store/modules/list.js"],"names":["createAction","handleActions","Map","List","fromJS","pender","api","GET_POST_LIST","GET_CHATROOM_LIST","SET_LOADING","INIT_LOADING","getPostList","meta","getCharRoomList","getChatRoomList","setLoading","initLoading","initialState","posts","chatrooms","lastPage","isLast","isLoading","state","set","type","onSuccess","action","payload","data","headers","next","parseInt","posts_before","get","newPost","toArray","map","post","mapPost","push","chatrooms_before","newChatRoom","ChatRoom","mapChatRoom"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\n\nimport { Map, List, fromJS } from \"immutable\";\nimport { pender } from \"redux-pender\";\n\nimport * as api from \"lib/api\";\n\n// action Types\nconst GET_POST_LIST = \"list/GET_POST_LIST\";\nconst GET_CHATROOM_LIST = \"list/GET_CHATROOM_LIST\";\nconst SET_LOADING = \"list/SET_LOADGIN\";\nconst INIT_LOADING = \"list/INIT_LOADING\";\n\n// action Creators\nexport const getPostList = createAction(\n  GET_POST_LIST,\n  api.getPostList,\n  meta => meta\n);\n\nexport const getCharRoomList = createAction(\n  GET_CHATROOM_LIST,\n  api.getChatRoomList,\n  meta => meta\n);\n\nexport const setLoading = createAction(SET_LOADING);\nexport const initLoading = createAction(INIT_LOADING);\n\n// initail state\nconst initialState = Map({\n  posts: List(),\n  chatrooms: List(),\n  lastPage: null,\n  // 아래 추가.\n  isLast: false,\n  isLoading: false\n});\n\n// reducer\nexport default handleActions(\n  {\n    [SET_LOADING]: state => {\n      return state.set(\"isLoading\", true);\n    },\n    [INIT_LOADING]: state => {\n      return state.set(\"isLoading\", false);\n    },\n    ...pender({\n      type: GET_POST_LIST,\n      // onPending: (state, action) => {\n      //   return state.set(\"isLoading\", true);\n      // },\n      onSuccess: (state, action) => {\n        const { data: posts } = action.payload;\n\n        // console.log(fromJS(posts));\n        const lastPage = action.payload.headers[\"last-page\"];\n        const next = parseInt(action.payload.headers[\"next\"], 10);\n        const posts_before = state.get(\"posts\");\n\n        const newPost = posts_before.toArray();\n        posts.map(post => {\n          const mapPost = Map(post);\n          newPost.push(mapPost);\n          return 0;\n        });\n\n        return next === 1\n          ? state.set(\"posts\", fromJS(newPost))\n          : state\n              .set(\"posts\", fromJS(posts))\n              //parseInt 앞에는 정수형으로 형변환할 데이터, 뒤에 인자값은 진수를 나타냄\n              .set(\"lastPage\", parseInt(lastPage, 10));\n      }\n    }),\n\n    ...pender({\n      type: GET_CHATROOM_LIST,\n      // onPending: (state, action) => {\n      //   return state.set(\"isLoading\", true);\n      // },\n      onSuccess: (state, action) => {\n        const { data: chatrooms } = action.payload;\n\n        // console.log(fromJS(posts));\n        const lastPage = action.payload.headers[\"last-page\"];\n        const next = parseInt(action.payload.headers[\"next\"], 10);\n        const chatrooms_before = state.get(\"chatrooms\");\n\n        const newChatRoom = chatrooms_before.toArray();\n        chatrooms.map(ChatRoom => {\n          const mapChatRoom = Map(ChatRoom);\n          newChatRoom.push(mapChatRoom);\n          return 0;\n        });\n        return next === 1\n          ? state.set(\"chatrooms\", fromJS(newChatRoom))\n          : state\n              .set(\"chatrooms\", fromJS(chatrooms))\n              //parseInt 앞에는 정수형으로 형변환할 데이터, 뒤에 인자값은 진수를 나타냄\n              .set(\"lastPage\", parseInt(lastPage, 10));\n      }\n    })\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}