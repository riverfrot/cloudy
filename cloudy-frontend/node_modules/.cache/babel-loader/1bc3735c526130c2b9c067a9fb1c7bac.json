{"ast":null,"code":"import _classCallCheck from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/src/containers/editor/EditorContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as editorActions from \"store/modules/editor\";\nimport EditorComponent from \"components/editor/EditorComponent\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nvar EditorContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditorContainer, _Component);\n\n  function EditorContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditorContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditorContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChangeInput = function (_ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      var EditorActions = _this.props.EditorActions;\n      EditorActions.changeInput({\n        name: name,\n        value: value\n      });\n      EditorActions.setPublisher();\n    };\n\n    return _this;\n  }\n\n  _createClass(EditorContainer, [{\n    key: \"render\",\n    value: function render() {\n      var handleChangeInput = this.handleChangeInput;\n      var _this$props = this.props,\n          title = _this$props.title,\n          body = _this$props.body,\n          tags = _this$props.tags,\n          location = _this$props.location;\n\n      var _queryString$parse = queryString.parse(location.search),\n          id = _queryString$parse.id;\n\n      console.log(\"contianer\" + body);\n      return React.createElement(EditorComponent, {\n        title: title,\n        tags: tags,\n        id: id,\n        body: body,\n        onChangeInput: handleChangeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EditorContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    title: state.editor.get(\"title\"),\n    body: state.editor.get(\"body\"),\n    tags: state.editor.get(\"tags\")\n  };\n}, function (dispatch) {\n  return {\n    EditorActions: bindActionCreators(editorActions, dispatch)\n  };\n})(withRouter(EditorContainer));","map":{"version":3,"sources":["/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/src/containers/editor/EditorContainer.js"],"names":["React","Component","connect","bindActionCreators","editorActions","EditorComponent","withRouter","queryString","EditorContainer","handleChangeInput","name","value","EditorActions","props","changeInput","setPublisher","title","body","tags","location","parse","search","id","console","log","state","editor","get","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,cAAxB;;IAEMC,e;;;;;;;;;;;;;;;;;;UACJC,iB,GAAoB,gBAAqB;AAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,UAAZC,KAAY,QAAZA,KAAY;AAAA,UAC/BC,aAD+B,GACb,MAAKC,KADQ,CAC/BD,aAD+B;AAEvCA,MAAAA,aAAa,CAACE,WAAd,CAA0B;AAAEJ,QAAAA,IAAI,EAAJA,IAAF;AAAQC,QAAAA,KAAK,EAALA;AAAR,OAA1B;AAEAC,MAAAA,aAAa,CAACG,YAAd;AACD,K;;;;;;;6BAEQ;AAAA,UACCN,iBADD,GACuB,IADvB,CACCA,iBADD;AAAA,wBAEiC,KAAKI,KAFtC;AAAA,UAECG,KAFD,eAECA,KAFD;AAAA,UAEQC,IAFR,eAEQA,IAFR;AAAA,UAEcC,IAFd,eAEcA,IAFd;AAAA,UAEoBC,QAFpB,eAEoBA,QAFpB;;AAAA,+BAGQZ,WAAW,CAACa,KAAZ,CAAkBD,QAAQ,CAACE,MAA3B,CAHR;AAAA,UAGCC,EAHD,sBAGCA,EAHD;;AAIPC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcP,IAA1B;AACA,aACE,oBAAC,eAAD;AACE,QAAA,KAAK,EAAED,KADT;AAEE,QAAA,IAAI,EAAEE,IAFR;AAGE,QAAA,EAAE,EAAEI,EAHN;AAIE,QAAA,IAAI,EAAEL,IAJR;AAKE,QAAA,aAAa,EAAER,iBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EAtB2BR,S;;AAyB9B,eAAeC,OAAO,CACpB,UAAAuB,KAAK;AAAA,SAAK;AACRT,IAAAA,KAAK,EAAES,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,OAAjB,CADC;AAERV,IAAAA,IAAI,EAAEQ,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,MAAjB,CAFE;AAGRT,IAAAA,IAAI,EAAEO,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,MAAjB;AAHE,GAAL;AAAA,CADe,EAMpB,UAAAC,QAAQ;AAAA,SAAK;AACXhB,IAAAA,aAAa,EAAET,kBAAkB,CAACC,aAAD,EAAgBwB,QAAhB;AADtB,GAAL;AAAA,CANY,CAAP,CASbtB,UAAU,CAACE,eAAD,CATG,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as editorActions from \"store/modules/editor\";\nimport EditorComponent from \"components/editor/EditorComponent\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nclass EditorContainer extends Component {\n  handleChangeInput = ({ name, value }) => {\n    const { EditorActions } = this.props;\n    EditorActions.changeInput({ name, value });\n\n    EditorActions.setPublisher();\n  };\n\n  render() {\n    const { handleChangeInput } = this;\n    const { title, body, tags, location } = this.props;\n    const { id } = queryString.parse(location.search);\n    console.log(\"contianer\" + body);\n    return (\n      <EditorComponent\n        title={title}\n        tags={tags}\n        id={id}\n        body={body}\n        onChangeInput={handleChangeInput}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    title: state.editor.get(\"title\"),\n    body: state.editor.get(\"body\"),\n    tags: state.editor.get(\"tags\")\n  }),\n  dispatch => ({\n    EditorActions: bindActionCreators(editorActions, dispatch)\n  })\n)(withRouter(EditorContainer));\n"]},"metadata":{},"sourceType":"module"}