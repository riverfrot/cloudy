{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/src/containers/login/LoginFormContainer.js\";\nimport React, { Component } from \"react\";\nimport LoginForm from \"components/login/LoginForm\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as loginActions from \"store/modules/login\";\nimport { withRouter } from \"react-router-dom\";\nimport storage from \"lib/storage\";\n\nvar LoginFormContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginFormContainer, _Component);\n\n  function LoginFormContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginFormContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginFormContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.handleSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, id, password, LoginActions, result, overlapPoint, message;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, id = _this$props.id, password = _this$props.password, LoginActions = _this$props.LoginActions;\n              _context.prev = 1;\n              _context.next = 4;\n              return LoginActions.userLogin({\n                id: id,\n                password: password\n              });\n\n            case 4:\n              result = _context.sent;\n              window.location.href = \"/\";\n              LoginActions.loginSuccess();\n              storage.set(\"loggedNickname\", result.data);\n              _context.next = 17;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n              if (!(_context.t0.response.status === 403)) {\n                _context.next = 17;\n                break;\n              }\n\n              overlapPoint = _context.t0.response.data.overlapPoint;\n              message = overlapPoint === \"login\" ? \"유저가 존재하지 않거나 비밀번호가 일치하지 않습니다.\" : \"\";\n              return _context.abrupt(\"return\", _this.setError(overlapPoint, message));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 10]]);\n    }));\n\n    _this.handleThirdPartyLogin =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref2) {\n        var id, nickname, accesstoken, logintype, LoginActions, result, overlapPoint, message;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = _ref2.id, nickname = _ref2.nickname, accesstoken = _ref2.accesstoken, logintype = _ref2.logintype;\n                LoginActions = _this.props.LoginActions;\n                _context2.prev = 2;\n                console.log(id, nickname, accesstoken);\n                _context2.next = 6;\n                return LoginActions.userThirdLogin({\n                  id: id,\n                  nickname: nickname,\n                  accesstoken: accesstoken,\n                  logintype: logintype\n                });\n\n              case 6:\n                result = _context2.sent;\n                window.location.href = \"/\";\n                LoginActions.loginSuccess();\n                console.log(result.data);\n                storage.set(\"loggedNickname\", result.data);\n                _context2.next = 20;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.log(_context2.t0);\n\n                if (!(_context2.t0.response.status === 403)) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                overlapPoint = _context2.t0.response.data.overlapPoint;\n                message = overlapPoint === \"login\" ? \"유저가 존재하지 않거나 비밀번호가 일치하지 않습니다.\" : \"\";\n                return _context2.abrupt(\"return\", _this.setError(overlapPoint, message));\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.setError = function (overlapPoint, message) {\n      var LoginActions = _this.props.LoginActions;\n      LoginActions.setError({\n        overlapPoint: overlapPoint,\n        message: message\n      });\n      return false;\n    };\n\n    _this.onChangeInput = function (_ref4) {\n      var value = _ref4.value,\n          name = _ref4.name;\n      var LoginActions = _this.props.LoginActions;\n      LoginActions.changeInput({\n        value: value,\n        name: name\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginFormContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var LoginActions = this.props.LoginActions;\n      LoginActions.clearStore();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var LoginActions = this.props.LoginActions;\n      LoginActions.initialize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.handleSubmit,\n          onChangeInput = this.onChangeInput,\n          handleThirdPartyLogin = this.handleThirdPartyLogin;\n      var _this$props2 = this.props,\n          overlapPoint = _this$props2.overlapPoint,\n          lengthCheckID = _this$props2.lengthCheckID,\n          lengthCheckPassword = _this$props2.lengthCheckPassword,\n          message = _this$props2.message;\n      return React.createElement(LoginForm, {\n        handleSubmit: handleSubmit,\n        onThirdPartyLogin: handleThirdPartyLogin,\n        onChangeInput: onChangeInput,\n        lengthCheckID: lengthCheckID,\n        lengthCheckPassword: lengthCheckPassword,\n        message: message,\n        overlapPoint: overlapPoint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return LoginFormContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    id: state.login.get(\"id\"),\n    password: state.login.get(\"password\"),\n    overlapPoint: state.login.get(\"overlapPoint\"),\n    message: state.login.get(\"message\"),\n    lengthCheckID: state.login.getIn([\"lengthCheck\", \"id\"]),\n    lengthCheckPassword: state.login.getIn([\"lengthCheck\", \"password\"])\n  };\n}, function (dispatch) {\n  return {\n    LoginActions: bindActionCreators(loginActions, dispatch)\n  };\n})(withRouter(LoginFormContainer));","map":{"version":3,"sources":["/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/src/containers/login/LoginFormContainer.js"],"names":["React","Component","LoginForm","connect","bindActionCreators","loginActions","withRouter","storage","LoginFormContainer","handleSubmit","props","id","password","LoginActions","userLogin","result","window","location","href","loginSuccess","set","data","console","log","response","status","overlapPoint","message","setError","handleThirdPartyLogin","nickname","accesstoken","logintype","userThirdLogin","onChangeInput","value","name","changeInput","clearStore","initialize","lengthCheckID","lengthCheckPassword","state","login","get","getIn","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,YAAZ,MAA8B,qBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,aAApB;;IAEMC,kB;;;;;;;;;;;;;;;;;UAKJC,Y;;;;6BAAe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAC0B,MAAKC,KAD/B,EACLC,EADK,eACLA,EADK,EACDC,QADC,eACDA,QADC,EACSC,YADT,eACSA,YADT;AAAA;AAAA;AAAA,qBAGUA,YAAY,CAACC,SAAb,CAAuB;AAAEH,gBAAAA,EAAE,EAAFA,EAAF;AAAMC,gBAAAA,QAAQ,EAARA;AAAN,eAAvB,CAHV;;AAAA;AAGLG,cAAAA,MAHK;AAIXC,cAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACAL,cAAAA,YAAY,CAACM,YAAb;AACAZ,cAAAA,OAAO,CAACa,GAAR,CAAY,gBAAZ,EAA8BL,MAAM,CAACM,IAArC;AANW;AAAA;;AAAA;AAAA;AAAA;AAQXC,cAAAA,OAAO,CAACC,GAAR;;AARW,oBASP,YAAEC,QAAF,CAAWC,MAAX,KAAsB,GATf;AAAA;AAAA;AAAA;;AAUDC,cAAAA,YAVC,GAUgB,YAAEF,QAAF,CAAWH,IAV3B,CAUDK,YAVC;AAWHC,cAAAA,OAXG,GAYPD,YAAY,KAAK,OAAjB,GACI,+BADJ,GAEI,EAdG;AAAA,+CAeF,MAAKE,QAAL,CAAcF,YAAd,EAA4BC,OAA5B,CAfE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAoBfE,qB;;;;;+BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASlB,gBAAAA,EAAT,SAASA,EAAT,EAAamB,QAAb,SAAaA,QAAb,EAAuBC,WAAvB,SAAuBA,WAAvB,EAAoCC,SAApC,SAAoCA,SAApC;AACdnB,gBAAAA,YADc,GACG,MAAKH,KADR,CACdG,YADc;AAAA;AAGpBS,gBAAAA,OAAO,CAACC,GAAR,CAAYZ,EAAZ,EAAgBmB,QAAhB,EAA0BC,WAA1B;AAHoB;AAAA,uBAIClB,YAAY,CAACoB,cAAb,CAA4B;AAC/CtB,kBAAAA,EAAE,EAAFA,EAD+C;AAE/CmB,kBAAAA,QAAQ,EAARA,QAF+C;AAG/CC,kBAAAA,WAAW,EAAXA,WAH+C;AAI/CC,kBAAAA,SAAS,EAATA;AAJ+C,iBAA5B,CAJD;;AAAA;AAIdjB,gBAAAA,MAJc;AAUpBC,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACAL,gBAAAA,YAAY,CAACM,YAAb;AACAG,gBAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACM,IAAnB;AACAd,gBAAAA,OAAO,CAACa,GAAR,CAAY,gBAAZ,EAA8BL,MAAM,CAACM,IAArC;AAboB;AAAA;;AAAA;AAAA;AAAA;AAepBC,gBAAAA,OAAO,CAACC,GAAR;;AAfoB,sBAgBhB,aAAEC,QAAF,CAAWC,MAAX,KAAsB,GAhBN;AAAA;AAAA;AAAA;;AAiBVC,gBAAAA,YAjBU,GAiBO,aAAEF,QAAF,CAAWH,IAjBlB,CAiBVK,YAjBU;AAkBZC,gBAAAA,OAlBY,GAmBhBD,YAAY,KAAK,OAAjB,GACI,+BADJ,GAEI,EArBY;AAAA,kDAsBX,MAAKE,QAAL,CAAcF,YAAd,EAA4BC,OAA5B,CAtBW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UA2BxBC,Q,GAAW,UAACF,YAAD,EAAeC,OAAf,EAA2B;AAAA,UAC5Bd,YAD4B,GACX,MAAKH,KADM,CAC5BG,YAD4B;AAEpCA,MAAAA,YAAY,CAACe,QAAb,CAAsB;AAAEF,QAAAA,YAAY,EAAZA,YAAF;AAAgBC,QAAAA,OAAO,EAAPA;AAAhB,OAAtB;AACA,aAAO,KAAP;AACD,K;;UAEDO,a,GAAgB,iBAAqB;AAAA,UAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,UAAXC,IAAW,SAAXA,IAAW;AAAA,UAC3BvB,YAD2B,GACV,MAAKH,KADK,CAC3BG,YAD2B;AAEnCA,MAAAA,YAAY,CAACwB,WAAb,CAAyB;AAAEF,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,IAAI,EAAJA;AAAT,OAAzB;AACD,K;;;;;;;yCA5DoB;AAAA,UACXvB,YADW,GACM,KAAKH,KADX,CACXG,YADW;AAEnBA,MAAAA,YAAY,CAACyB,UAAb;AACD;;;wCA2DmB;AAAA,UACVzB,YADU,GACO,KAAKH,KADZ,CACVG,YADU;AAElBA,MAAAA,YAAY,CAAC0B,UAAb;AACD;;;6BAEQ;AAAA,UACC9B,YADD,GACwD,IADxD,CACCA,YADD;AAAA,UACeyB,aADf,GACwD,IADxD,CACeA,aADf;AAAA,UAC8BL,qBAD9B,GACwD,IADxD,CAC8BA,qBAD9B;AAAA,yBAOH,KAAKnB,KAPF;AAAA,UAGLgB,YAHK,gBAGLA,YAHK;AAAA,UAILc,aAJK,gBAILA,aAJK;AAAA,UAKLC,mBALK,gBAKLA,mBALK;AAAA,UAMLd,OANK,gBAMLA,OANK;AAQP,aACE,oBAAC,SAAD;AACE,QAAA,YAAY,EAAElB,YADhB;AAEE,QAAA,iBAAiB,EAAEoB,qBAFrB;AAGE,QAAA,aAAa,EAAEK,aAHjB;AAIE,QAAA,aAAa,EAAEM,aAJjB;AAKE,QAAA,mBAAmB,EAAEC,mBALvB;AAME,QAAA,OAAO,EAAEd,OANX;AAOE,QAAA,YAAY,EAAED,YAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EAvF8BzB,S;;AA0FjC,eAAeE,OAAO,CACpB,UAAAuC,KAAK;AAAA,SAAK;AACR/B,IAAAA,EAAE,EAAE+B,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,IAAhB,CADI;AAERhC,IAAAA,QAAQ,EAAE8B,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAhB,CAFF;AAGRlB,IAAAA,YAAY,EAAEgB,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,cAAhB,CAHN;AAIRjB,IAAAA,OAAO,EAAEe,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,SAAhB,CAJD;AAKRJ,IAAAA,aAAa,EAAEE,KAAK,CAACC,KAAN,CAAYE,KAAZ,CAAkB,CAAC,aAAD,EAAgB,IAAhB,CAAlB,CALP;AAMRJ,IAAAA,mBAAmB,EAAEC,KAAK,CAACC,KAAN,CAAYE,KAAZ,CAAkB,CAAC,aAAD,EAAgB,UAAhB,CAAlB;AANb,GAAL;AAAA,CADe,EASpB,UAAAC,QAAQ;AAAA,SAAK;AACXjC,IAAAA,YAAY,EAAET,kBAAkB,CAACC,YAAD,EAAeyC,QAAf;AADrB,GAAL;AAAA,CATY,CAAP,CAYbxC,UAAU,CAACE,kBAAD,CAZG,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport LoginForm from \"components/login/LoginForm\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as loginActions from \"store/modules/login\";\nimport { withRouter } from \"react-router-dom\";\nimport storage from \"lib/storage\";\n\nclass LoginFormContainer extends Component {\n  componentWillMount() {\n    const { LoginActions } = this.props;\n    LoginActions.clearStore();\n  }\n  handleSubmit = async () => {\n    const { id, password, LoginActions } = this.props;\n    try {\n      const result = await LoginActions.userLogin({ id, password });\n      window.location.href = \"/\";\n      LoginActions.loginSuccess();\n      storage.set(\"loggedNickname\", result.data);\n    } catch (e) {\n      console.log(e);\n      if (e.response.status === 403) {\n        const { overlapPoint } = e.response.data;\n        const message =\n          overlapPoint === \"login\"\n            ? \"유저가 존재하지 않거나 비밀번호가 일치하지 않습니다.\"\n            : \"\";\n        return this.setError(overlapPoint, message);\n      }\n    }\n  };\n\n  handleThirdPartyLogin = async ({ id, nickname, accesstoken, logintype }) => {\n    const { LoginActions } = this.props;\n    try {\n      console.log(id, nickname, accesstoken);\n      const result = await LoginActions.userThirdLogin({\n        id,\n        nickname,\n        accesstoken,\n        logintype\n      });\n      window.location.href = \"/\";\n      LoginActions.loginSuccess();\n      console.log(result.data);\n      storage.set(\"loggedNickname\", result.data);\n    } catch (e) {\n      console.log(e);\n      if (e.response.status === 403) {\n        const { overlapPoint } = e.response.data;\n        const message =\n          overlapPoint === \"login\"\n            ? \"유저가 존재하지 않거나 비밀번호가 일치하지 않습니다.\"\n            : \"\";\n        return this.setError(overlapPoint, message);\n      }\n    }\n  };\n\n  setError = (overlapPoint, message) => {\n    const { LoginActions } = this.props;\n    LoginActions.setError({ overlapPoint, message });\n    return false;\n  };\n\n  onChangeInput = ({ value, name }) => {\n    const { LoginActions } = this.props;\n    LoginActions.changeInput({ value, name });\n  };\n\n  componentDidMount() {\n    const { LoginActions } = this.props;\n    LoginActions.initialize();\n  }\n\n  render() {\n    const { handleSubmit, onChangeInput, handleThirdPartyLogin } = this;\n    const {\n      overlapPoint,\n      lengthCheckID,\n      lengthCheckPassword,\n      message\n    } = this.props;\n    return (\n      <LoginForm\n        handleSubmit={handleSubmit}\n        onThirdPartyLogin={handleThirdPartyLogin}\n        onChangeInput={onChangeInput}\n        lengthCheckID={lengthCheckID}\n        lengthCheckPassword={lengthCheckPassword}\n        message={message}\n        overlapPoint={overlapPoint}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    id: state.login.get(\"id\"),\n    password: state.login.get(\"password\"),\n    overlapPoint: state.login.get(\"overlapPoint\"),\n    message: state.login.get(\"message\"),\n    lengthCheckID: state.login.getIn([\"lengthCheck\", \"id\"]),\n    lengthCheckPassword: state.login.getIn([\"lengthCheck\", \"password\"])\n  }),\n  dispatch => ({\n    LoginActions: bindActionCreators(loginActions, dispatch)\n  })\n)(withRouter(LoginFormContainer));\n"]},"metadata":{},"sourceType":"module"}