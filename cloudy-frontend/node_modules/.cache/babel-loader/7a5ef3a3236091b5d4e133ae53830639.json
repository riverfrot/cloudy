{"ast":null,"code":"import _classCallCheck from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/src/containers/list/PostListContainer.js\";\nimport React, { Component } from \"react\";\nimport PostList from \"components/list/PostList\";\nimport { connect } from \"react-redux\";\nimport * as listActions from \"store/modules/list\";\nimport { bindActionCreators } from \"redux\";\nimport LoadingView from \"components/common/LoadingView\";\n\nvar PostListContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostListContainer, _Component);\n\n  function PostListContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostListContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getPostList = function () {\n      //페이지와 태그 값을 부모에게서 받아 옵니다.\n      var _this$props = _this.props,\n          tag = _this$props.tag,\n          page = _this$props.page,\n          ListActions = _this$props.ListActions;\n      ListActions.getPostList({\n        page: page,\n        tag: tag\n      });\n    };\n\n    _this.handleScroll = function () {\n      var _this$props2 = _this.props,\n          isLoading = _this$props2.isLoading,\n          isLast = _this$props2.isLast,\n          ListActions = _this$props2.ListActions,\n          posts = _this$props2.posts;\n      var _window = window,\n          innerHeight = _window.innerHeight;\n      var scrollHeight = document.body.scrollHeight;\n      var scrollTop = document.documentElement && document.documentElement.scrollTop || document.body.scrollTop;\n\n      if (scrollHeight - innerHeight - scrollTop < 100) {\n        if (!isLoading && !isLast) {\n          ListActions.setLoading();\n          setTimeout(function () {\n            var nextPage = posts.toJS().length / 16 + 1;\n            ListActions.getPostList({\n              page: nextPage,\n              next: 1\n            });\n            setTimeout(function () {\n              ListActions.initLoading();\n            }, 1000);\n          }, 2000);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PostListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPostList(); // 스크롤링 이벤트 추가\n\n      window.addEventListener(\"scroll\", this.handleScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // 언마운트 될때에, 스크롤링 이벤트 제거\n      window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          posts = _this$props3.posts,\n          isLoading = _this$props3.isLoading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(PostList, {\n        posts: posts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(LoadingView, {\n        isLoading: isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PostListContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    lastPage: state.list.get(\"lastPage\"),\n    posts: state.list.get(\"posts\"),\n    isLast: state.list.get(\"isLast\"),\n    isLoading: state.list.get(\"isLoading\")\n  };\n}, function (dispatch) {\n  return {\n    ListActions: bindActionCreators(listActions, dispatch)\n  };\n})(PostListContainer);","map":{"version":3,"sources":["/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/src/containers/list/PostListContainer.js"],"names":["React","Component","PostList","connect","listActions","bindActionCreators","LoadingView","PostListContainer","getPostList","props","tag","page","ListActions","handleScroll","isLoading","isLast","posts","window","innerHeight","scrollHeight","document","body","scrollTop","documentElement","setLoading","setTimeout","nextPage","toJS","length","next","initLoading","addEventListener","removeEventListener","state","lastPage","list","get","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PostList from \"components/list/PostList\";\nimport { connect } from \"react-redux\";\nimport * as listActions from \"store/modules/list\";\nimport { bindActionCreators } from \"redux\";\nimport LoadingView from \"components/common/LoadingView\";\n\nclass PostListContainer extends Component {\n  getPostList = () => {\n    //페이지와 태그 값을 부모에게서 받아 옵니다.\n    const { tag, page, ListActions } = this.props;\n    ListActions.getPostList({\n      page,\n      tag\n    });\n  };\n\n  handleScroll = () => {\n    const { isLoading, isLast, ListActions, posts } = this.props;\n    const { innerHeight } = window;\n    const { scrollHeight } = document.body;\n\n    const scrollTop =\n      (document.documentElement && document.documentElement.scrollTop) ||\n      document.body.scrollTop;\n\n    if (scrollHeight - innerHeight - scrollTop < 100) {\n      if (!isLoading && !isLast) {\n        ListActions.setLoading();\n        setTimeout(() => {\n          const nextPage = posts.toJS().length / 16 + 1;\n          ListActions.getPostList({ page: nextPage, next: 1 });\n          setTimeout(() => {\n            ListActions.initLoading();\n          }, 1000);\n        }, 2000);\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.getPostList();\n    // 스크롤링 이벤트 추가\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    // 언마운트 될때에, 스크롤링 이벤트 제거\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  render() {\n    const { posts, isLoading } = this.props;\n\n    return (\n      <div>\n        <PostList posts={posts} />\n        <LoadingView isLoading={isLoading} />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    lastPage: state.list.get(\"lastPage\"),\n    posts: state.list.get(\"posts\"),\n    isLast: state.list.get(\"isLast\"),\n    isLoading: state.list.get(\"isLoading\")\n  }),\n  dispatch => ({\n    ListActions: bindActionCreators(listActions, dispatch)\n  })\n)(PostListContainer);\n"]},"metadata":{},"sourceType":"module"}