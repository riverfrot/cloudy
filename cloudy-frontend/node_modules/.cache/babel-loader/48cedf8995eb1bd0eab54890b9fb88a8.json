{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport penderMiddleware from \"redux-pender\";\nimport * as modules from \"./modules\";\nvar reducers = combineReducers(modules);\nvar middlewares = [penderMiddleware()]; // 개발 모드 일때만 Redux Devtools를 적용 합니다.\n\nvar isDev = process.env.NODE_ENV === \"development\";\nvar devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nvar composeEnhancers = devtools || compose; //preloadedState는 추후 서버사이드 랜더링을 했을 때 전달받는 초기 상태 입니다.\n\nvar configure = function configure(preloadState) {\n  return createStore(reducers, preloadState, composeEnhancers(applyMiddleware.apply(void 0, middlewares)));\n};\n\nexport default configure;","map":{"version":3,"sources":["/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/src/store/configure.js"],"names":["createStore","applyMiddleware","compose","combineReducers","penderMiddleware","modules","reducers","middlewares","isDev","process","env","NODE_ENV","devtools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","configure","preloadState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,IAAMC,QAAQ,GAAGH,eAAe,CAACE,OAAD,CAAhC;AACA,IAAME,WAAW,GAAG,CAACH,gBAAgB,EAAjB,CAApB,C,CAEA;;AACA,IAAMI,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAvC;AACA,IAAMC,QAAQ,GAAGJ,KAAK,IAAIK,MAAM,CAACC,oCAAjC;AACA,IAAMC,gBAAgB,GAAGH,QAAQ,IAAIV,OAArC,C,CAEA;;AAEA,IAAMc,SAAS,GAAG,SAAZA,SAAY,CAAAC,YAAY;AAAA,SAC5BjB,WAAW,CACTM,QADS,EAETW,YAFS,EAGTF,gBAAgB,CAACd,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CAHP,CADiB;AAAA,CAA9B;;AAOA,eAAeS,SAAf","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport penderMiddleware from \"redux-pender\";\nimport * as modules from \"./modules\";\n\nconst reducers = combineReducers(modules);\nconst middlewares = [penderMiddleware()];\n\n// 개발 모드 일때만 Redux Devtools를 적용 합니다.\nconst isDev = process.env.NODE_ENV === \"development\";\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = devtools || compose;\n\n//preloadedState는 추후 서버사이드 랜더링을 했을 때 전달받는 초기 상태 입니다.\n\nconst configure = preloadState =>\n  createStore(\n    reducers,\n    preloadState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\nexport default configure;\n"]},"metadata":{},"sourceType":"module"}