{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/src/containers/post/PostContainer.js\";\nimport React, { Component } from \"react\";\nimport Post from \"components/post/Post\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as postActions from \"store/modules/post\";\nimport * as commonActions from \"store/modules/common\";\n\nvar PostContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostContainer, _Component);\n\n  function PostContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.initialize =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, PostActions, id, post, _post$toJS, publisher, body;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, PostActions = _this$props.PostActions, id = _this$props.id;\n              _context.prev = 1;\n              _context.next = 4;\n              return PostActions.getPost(id);\n\n            case 4:\n              post = _this.props.post;\n              _post$toJS = post.toJS(), publisher = _post$toJS.publisher, body = _post$toJS.body;\n\n              _this.isPublisher(publisher, body);\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 9]]);\n    }));\n\n    _this.isPublisher = function (publisher, body) {\n      var CommonActions = _this.props.CommonActions;\n      CommonActions.checkPublisher({\n        publisher: publisher,\n        body: body\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PostContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initialize();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var PostActions = this.props.PostActions;\n      PostActions.initialize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          loading = _this$props2.loading,\n          post = _this$props2.post;\n      if (loading) return null; // 로딩 중일 때는 아무것도 보여 주지 않음\n\n      var _post$toJS2 = post.toJS(),\n          title = _post$toJS2.title,\n          body = _post$toJS2.body,\n          publishedDate = _post$toJS2.publishedDate,\n          tags = _post$toJS2.tags,\n          publisher = _post$toJS2.publisher;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Post, {\n        title: title,\n        body: body,\n        publishedDate: publishedDate,\n        tags: tags,\n        publisher: publisher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PostContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    post: state.post.get(\"post\"),\n    loading: state.pender.pending[\"post/GET_POST\"] // 로딩 상태\n\n  };\n}, function (dispatch) {\n  return {\n    PostActions: bindActionCreators(postActions, dispatch),\n    CommonActions: bindActionCreators(commonActions, dispatch)\n  };\n})(withRouter(PostContainer));","map":{"version":3,"sources":["/Users/jeongdonghun/React_Project/cloudy/cloudy-frontend/src/containers/post/PostContainer.js"],"names":["React","Component","Post","connect","withRouter","bindActionCreators","postActions","commonActions","PostContainer","initialize","props","PostActions","id","getPost","post","toJS","publisher","body","isPublisher","console","log","CommonActions","checkPublisher","loading","title","publishedDate","tags","state","get","pender","pending","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;;IAEMC,a;;;;;;;;;;;;;;;;;UACJC,U;;;;6BAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACiB,MAAKC,KADtB,EACHC,WADG,eACHA,WADG,EACUC,EADV,eACUA,EADV;AAAA;AAAA;AAAA,qBAGHD,WAAW,CAACE,OAAZ,CAAoBD,EAApB,CAHG;;AAAA;AAIDE,cAAAA,IAJC,GAIQ,MAAKJ,KAJb,CAIDI,IAJC;AAAA,2BAKmBA,IAAI,CAACC,IAAL,EALnB,EAKDC,SALC,cAKDA,SALC,EAKUC,IALV,cAKUA,IALV;;AAOT,oBAAKC,WAAL,CAAiBF,SAAjB,EAA4BC,IAA5B;;AAPS;AAAA;;AAAA;AAAA;AAAA;AASTE,cAAAA,OAAO,CAACC,GAAR;;AATS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAsBbF,W,GAAc,UAACF,SAAD,EAAYC,IAAZ,EAAqB;AAAA,UACzBI,aADyB,GACP,MAAKX,KADE,CACzBW,aADyB;AAEjCA,MAAAA,aAAa,CAACC,cAAd,CAA6B;AAAEN,QAAAA,SAAS,EAATA,SAAF;AAAaC,QAAAA,IAAI,EAAJA;AAAb,OAA7B;AACD,K;;;;;;;wCAZmB;AAClB,WAAKR,UAAL;AACD;;;2CAEsB;AAAA,UACbE,WADa,GACG,KAAKD,KADR,CACbC,WADa;AAErBA,MAAAA,WAAW,CAACF,UAAZ;AACD;;;6BAOQ;AAAA,yBACmB,KAAKC,KADxB;AAAA,UACCa,OADD,gBACCA,OADD;AAAA,UACUT,IADV,gBACUA,IADV;AAGP,UAAIS,OAAJ,EAAa,OAAO,IAAP,CAHN,CAGmB;;AAHnB,wBAKiDT,IAAI,CAACC,IAAL,EALjD;AAAA,UAKCS,KALD,eAKCA,KALD;AAAA,UAKQP,IALR,eAKQA,IALR;AAAA,UAKcQ,aALd,eAKcA,aALd;AAAA,UAK6BC,IAL7B,eAK6BA,IAL7B;AAAA,UAKmCV,SALnC,eAKmCA,SALnC;;AAOP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEQ,KADT;AAEE,QAAA,IAAI,EAAEP,IAFR;AAGE,QAAA,aAAa,EAAEQ,aAHjB;AAIE,QAAA,IAAI,EAAEC,IAJR;AAKE,QAAA,SAAS,EAAEV,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD;;;;EA9CyBf,S;;AAiD5B,eAAeE,OAAO,CACpB,UAAAwB,KAAK;AAAA,SAAK;AACRb,IAAAA,IAAI,EAAEa,KAAK,CAACb,IAAN,CAAWc,GAAX,CAAe,MAAf,CADE;AAERL,IAAAA,OAAO,EAAEI,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,eAArB,CAFD,CAEuC;;AAFvC,GAAL;AAAA,CADe,EAKpB,UAAAC,QAAQ;AAAA,SAAK;AACXpB,IAAAA,WAAW,EAAEN,kBAAkB,CAACC,WAAD,EAAcyB,QAAd,CADpB;AAEXV,IAAAA,aAAa,EAAEhB,kBAAkB,CAACE,aAAD,EAAgBwB,QAAhB;AAFtB,GAAL;AAAA,CALY,CAAP,CASb3B,UAAU,CAACI,aAAD,CATG,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Post from \"components/post/Post\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport * as postActions from \"store/modules/post\";\nimport * as commonActions from \"store/modules/common\";\n\nclass PostContainer extends Component {\n  initialize = async () => {\n    const { PostActions, id } = this.props;\n    try {\n      await PostActions.getPost(id);\n      const { post } = this.props;\n      const { publisher, body } = post.toJS();\n\n      this.isPublisher(publisher, body);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  componentWillUnmount() {\n    const { PostActions } = this.props;\n    PostActions.initialize();\n  }\n\n  isPublisher = (publisher, body) => {\n    const { CommonActions } = this.props;\n    CommonActions.checkPublisher({ publisher, body });\n  };\n\n  render() {\n    const { loading, post } = this.props;\n\n    if (loading) return null; // 로딩 중일 때는 아무것도 보여 주지 않음\n\n    const { title, body, publishedDate, tags, publisher } = post.toJS();\n\n    return (\n      <div>\n        <Post\n          title={title}\n          body={body}\n          publishedDate={publishedDate}\n          tags={tags}\n          publisher={publisher}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    post: state.post.get(\"post\"),\n    loading: state.pender.pending[\"post/GET_POST\"] // 로딩 상태\n  }),\n  dispatch => ({\n    PostActions: bindActionCreators(postActions, dispatch),\n    CommonActions: bindActionCreators(commonActions, dispatch)\n  })\n)(withRouter(PostContainer));\n"]},"metadata":{},"sourceType":"module"}