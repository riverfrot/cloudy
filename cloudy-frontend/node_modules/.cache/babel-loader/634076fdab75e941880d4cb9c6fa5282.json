{"ast":null,"code":"import _defineProperty from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _objectSpread2;\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { Map, List, fromJS } from \"immutable\";\nimport { pender } from \"redux-pender\";\nimport * as api from \"lib/api\";\nvar GET_CHAT_MESSAGE_LIST = \"chat/GET_CHAT_MESSAGE_LIST\";\nvar SEND_CHAT_MESSAGE = \"chat/SEND_MESSAGE\";\nvar LISTEN_CHAT_MESSAGE = \"chat/LISTEN_CHAT_MESSAGE\";\nvar SET_SOCKET = \"chat/SET_SOCKET\";\nvar CHANGE_CHAT_MESSAGE_INPUT = \"chat/CHANGE_CHAT_MESSAGE_INPUT\";\nexport var getChatMessageList = createAction(GET_CHAT_MESSAGE_LIST, api.getChatMessageList);\nexport var sendChatMessage = createAction(SEND_CHAT_MESSAGE);\nexport var setSocket = createAction(SET_SOCKET);\nexport var listenChatMessage = createAction(LISTEN_CHAT_MESSAGE);\nexport var changeChatMessageInput = createAction(CHANGE_CHAT_MESSAGE_INPUT);\nvar initialState = Map({\n  socket: \"\",\n  chatId: 0,\n  chatMessage: \"\",\n  timestamp: \"\",\n  chatList: List()\n});\nexport default handleActions(_objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, SET_SOCKET, function (state, action) {\n  var socket = action.payload.socket;\n  console.log(\"aaa\" + socket);\n  return state.set(socket);\n}), _defineProperty(_objectSpread2, SEND_CHAT_MESSAGE, function (state, action) {\n  var _action$payload = action.payload,\n      msg = _action$payload.msg,\n      userID = _action$payload.userID;\n  var chatmessage = state.get(\"chatList\").concat({\n    text: msg,\n    userID: userID\n  });\n  return state.set(\"chatMessage\", \"\").set(\"who_send\", \"\").set(\"chatList\", chatmessage);\n}), _defineProperty(_objectSpread2, LISTEN_CHAT_MESSAGE, function (state, action) {\n  var _action$payload2 = action.payload,\n      msg = _action$payload2.msg,\n      userID = _action$payload2.userID;\n  var chatmessage = state.get(\"chatList\").concat({\n    text: msg,\n    userID: userID\n  });\n  return state.set(\"chatList\", chatmessage);\n}), _defineProperty(_objectSpread2, CHANGE_CHAT_MESSAGE_INPUT, function (state, action) {\n  var _action$payload3 = action.payload,\n      name = _action$payload3.name,\n      value = _action$payload3.value;\n  var currentDate = new Date();\n  return state.set(name, value).set(\"timestamp\", currentDate).set(\"who_send\", \"me\");\n}), _objectSpread2), pender({\n  type: GET_CHAT_MESSAGE_LIST,\n  onSuccess: function onSuccess(state, action) {\n    var chatMessages = action.payload.data;\n    console.log(fromJS(chatMessages));\n    return state.set(\"chatList\", fromJS(chatMessages));\n  }\n})), initialState);","map":{"version":3,"sources":["/Users/jeongdonghun/React_Project/snapchat/snapchat-frontend/src/store/modules/chat.js"],"names":["createAction","handleActions","Map","List","fromJS","pender","api","GET_CHAT_MESSAGE_LIST","SEND_CHAT_MESSAGE","LISTEN_CHAT_MESSAGE","SET_SOCKET","CHANGE_CHAT_MESSAGE_INPUT","getChatMessageList","sendChatMessage","setSocket","listenChatMessage","changeChatMessageInput","initialState","socket","chatId","chatMessage","timestamp","chatList","state","action","payload","console","log","set","msg","userID","chatmessage","get","concat","text","name","value","currentDate","Date","type","onSuccess","chatMessages","data"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { Map, List, fromJS } from \"immutable\";\nimport { pender } from \"redux-pender\";\nimport * as api from \"lib/api\";\n\nconst GET_CHAT_MESSAGE_LIST = \"chat/GET_CHAT_MESSAGE_LIST\";\nconst SEND_CHAT_MESSAGE = \"chat/SEND_MESSAGE\";\nconst LISTEN_CHAT_MESSAGE = \"chat/LISTEN_CHAT_MESSAGE\";\nconst SET_SOCKET = \"chat/SET_SOCKET\";\nconst CHANGE_CHAT_MESSAGE_INPUT = \"chat/CHANGE_CHAT_MESSAGE_INPUT\";\n\nexport const getChatMessageList = createAction(\n  GET_CHAT_MESSAGE_LIST,\n  api.getChatMessageList\n);\nexport const sendChatMessage = createAction(SEND_CHAT_MESSAGE);\nexport const setSocket = createAction(SET_SOCKET);\nexport const listenChatMessage = createAction(LISTEN_CHAT_MESSAGE);\nexport const changeChatMessageInput = createAction(CHANGE_CHAT_MESSAGE_INPUT);\n\nconst initialState = Map({\n  socket: \"\",\n  chatId: 0,\n  chatMessage: \"\",\n  timestamp: \"\",\n  chatList: List()\n});\n\nexport default handleActions(\n  {\n    [SET_SOCKET]: (state, action) => {\n      const { socket } = action.payload;\n      console.log(\"aaa\" + socket);\n      return state.set(socket);\n    },\n    [SEND_CHAT_MESSAGE]: (state, action) => {\n      const { msg, userID } = action.payload;\n\n      const chatmessage = state.get(\"chatList\").concat({ text: msg, userID });\n\n      return state\n        .set(\"chatMessage\", \"\")\n        .set(\"who_send\", \"\")\n        .set(\"chatList\", chatmessage);\n    },\n\n    [LISTEN_CHAT_MESSAGE]: (state, action) => {\n      const { msg, userID } = action.payload;\n      const chatmessage = state.get(\"chatList\").concat({ text: msg, userID });\n\n      return state.set(\"chatList\", chatmessage);\n    },\n    [CHANGE_CHAT_MESSAGE_INPUT]: (state, action) => {\n      const { name, value } = action.payload;\n      const currentDate = new Date();\n      return state\n        .set(name, value)\n        .set(\"timestamp\", currentDate)\n        .set(\"who_send\", \"me\");\n    },\n    ...pender({\n      type: GET_CHAT_MESSAGE_LIST,\n\n      onSuccess: (state, action) => {\n        const { data: chatMessages } = action.payload;\n        console.log(fromJS(chatMessages));\n        return state.set(\"chatList\", fromJS(chatMessages));\n      }\n    })\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}